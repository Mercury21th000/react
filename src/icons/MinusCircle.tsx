import React, { forwardRef, useContext } from "react";
import { IconProps, IconContext } from "../lib";

const renderPathFor = (weight: string, color: string): JSX.Element | null => {
  switch (weight) {
    case "thin":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            fillRule="nonzero"
            d="M8,1.75 C11.4510712,1.75 14.25,4.54892881 14.25,8 C14.25,11.4510712 11.4510712,14.25 8,14.25 C4.54892881,14.25 1.75,11.4510712 1.75,8 C1.75,4.54892881 4.54892881,1.75 8,1.75 Z M8,2.25 C4.82507119,2.25 2.25,4.82507119 2.25,8 C2.25,11.1749288 4.82507119,13.75 8,13.75 C11.1749288,13.75 13.75,11.1749288 13.75,8 C13.75,4.82507119 11.1749288,2.25 8,2.25 Z M10.5,7.75 C10.6380712,7.75 10.75,7.86192881 10.75,8 C10.75,8.11834673 10.6677666,8.21748682 10.5573227,8.24339732 L10.5,8.25 L5.5,8.25 C5.36192881,8.25 5.25,8.13807119 5.25,8 C5.25,7.88165327 5.33223341,7.78251318 5.44267729,7.75660268 L5.5,7.75 L10.5,7.75 Z"
          />
        </g>
      );
    case "light":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            fillRule="nonzero"
            d="M8,1.625 C11.5201068,1.625 14.375,4.47989322 14.375,8 C14.375,11.5201068 11.5201068,14.375 8,14.375 C4.47989322,14.375 1.625,11.5201068 1.625,8 C1.625,4.47989322 4.47989322,1.625 8,1.625 Z M8,2.375 C4.89410678,2.375 2.375,4.89410678 2.375,8 C2.375,11.1058932 4.89410678,13.625 8,13.625 C11.1058932,13.625 13.625,11.1058932 13.625,8 C13.625,4.89410678 11.1058932,2.375 8,2.375 Z M10.5,7.625 C10.7071068,7.625 10.875,7.79289322 10.875,8 C10.875,8.18121843 10.7464568,8.33241398 10.5755756,8.36738133 L10.5,8.375 L5.5,8.375 C5.29289322,8.375 5.125,8.20710678 5.125,8 C5.125,7.81878157 5.25354325,7.66758602 5.42442442,7.63261867 L5.5,7.625 L10.5,7.625 Z"
          />
        </g>
      );
    case "regular":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            fillRule="nonzero"
            d="M8,1.5 C11.5891424,1.5 14.5,4.41085763 14.5,8 C14.5,11.5891424 11.5891424,14.5 8,14.5 C4.41085763,14.5 1.5,11.5891424 1.5,8 C1.5,4.41085763 4.41085763,1.5 8,1.5 Z M8,2.5 C4.96314237,2.5 2.5,4.96314237 2.5,8 C2.5,11.0368576 4.96314237,13.5 8,13.5 C11.0368576,13.5 13.5,11.0368576 13.5,8 C13.5,4.96314237 11.0368576,2.5 8,2.5 Z M10.5,7.5 C10.7761424,7.5 11,7.72385763 11,8 C11,8.24545989 10.8231248,8.44960837 10.5898756,8.49194433 L10.5,8.5 L5.5,8.5 C5.22385763,8.5 5,8.27614237 5,8 C5,7.75454011 5.17687516,7.55039163 5.41012437,7.50805567 L5.5,7.5 L10.5,7.5 Z"
          />
        </g>
      );
    case "bold":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            fillRule="nonzero"
            d="M8,1.25 C11.7272136,1.25 14.75,4.27278644 14.75,8 C14.75,11.7272136 11.7272136,14.75 8,14.75 C4.27278644,14.75 1.25,11.7272136 1.25,8 C1.25,4.27278644 4.27278644,1.25 8,1.25 Z M8,2.75 C5.10121356,2.75 2.75,5.10121356 2.75,8 C2.75,10.8987864 5.10121356,13.25 8,13.25 C10.8987864,13.25 13.25,10.8987864 13.25,8 C13.25,5.10121356 10.8987864,2.75 8,2.75 Z M10.5,7.25 C10.9142136,7.25 11.25,7.58578644 11.25,8 C11.25,8.37969577 10.9678461,8.69349096 10.6017706,8.74315338 L10.5,8.75 L5.5,8.75 C5.08578644,8.75 4.75,8.41421356 4.75,8 C4.75,7.62030423 5.03215388,7.30650904 5.39822944,7.25684662 L5.5,7.25 L10.5,7.25 Z"
          />
        </g>
      );
    case "fill":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            d="M10.5,8.5 L5.5,8.5 C5.224,8.5 5,8.276 5,8 C5,7.724 5.224,7.5 5.5,7.5 L10.5,7.5 C10.776,7.5 11,7.724 11,8 C11,8.276 10.776,8.5 10.5,8.5 M8,1.5 C4.416,1.5 1.5,4.416 1.5,8 C1.5,11.584 4.416,14.5 8,14.5 C11.584,14.5 14.5,11.584 14.5,8 C14.5,4.416 11.584,1.5 8,1.5"
          />
        </g>
      );
    case "duotone":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            d="M2,8 C2,4.687 4.687,2 8,2 C11.313,2 14,4.687 14,8 C14,11.313 11.313,14 8,14 C4.687,14 2,11.313 2,8"
            opacity=".2"
          />
          <path
            fill={color}
            fillRule="nonzero"
            d="M8,1.5 C11.5891424,1.5 14.5,4.41085763 14.5,8 C14.5,11.5891424 11.5891424,14.5 8,14.5 C4.41085763,14.5 1.5,11.5891424 1.5,8 C1.5,4.41085763 4.41085763,1.5 8,1.5 Z M8,2.5 C4.96314237,2.5 2.5,4.96314237 2.5,8 C2.5,11.0368576 4.96314237,13.5 8,13.5 C11.0368576,13.5 13.5,11.0368576 13.5,8 C13.5,4.96314237 11.0368576,2.5 8,2.5 Z M10.5,7.5 C10.7761424,7.5 11,7.72385763 11,8 C11,8.24545989 10.8231248,8.44960837 10.5898756,8.49194433 L10.5,8.5 L5.5,8.5 C5.22385763,8.5 5,8.27614237 5,8 C5,7.75454011 5.17687516,7.55039163 5.41012437,7.50805567 L5.5,7.5 L10.5,7.5 Z"
          />
        </g>
      );
    default:
      console.error(
        'Unsupported icon weight. Choose from "thin", "light", "regular", "bold", "fill", or "duotone".'
      );
      return null;
  }
};

const MinusCircle = forwardRef<SVGSVGElement, IconProps>((props, ref) => {
  const { color, size, weight, mirrored, ...rest } = props;
  const {
    color: contextColor,
    size: contextSize,
    weight: contextWeight,
    mirrored: contextMirrored,
    ...contextRest
  } = useContext(IconContext);

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      width={size ?? contextSize}
      height={size ?? contextSize}
      viewBox="0 0 16 16"
      fill="none"
      stroke={color ?? contextColor}
      transform={mirrored || contextMirrored ? "scale(-1, 1)" : undefined}
      {...contextRest}
      {...rest}
    >
      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}
    </svg>
  );
});

MinusCircle.displayName = "MinusCircle";

export default MinusCircle;

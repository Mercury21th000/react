
import React, { forwardRef, useContext } from "react";
import { IconProps, IconContext } from "../lib";

const renderPathFor = (weight: string, color: string): JSX.Element | null => {
  switch (weight) {
    case "bold":
      return (
  <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
    <polygon points="0 16 15.999 16 15.999 0 0 0"/>
    <path fill={color} fillRule="nonzero" d="M8.42176991,2.92116991 L7.999,3.342 L7.70875277,3.05149279 C6.16443493,1.50717476 3.66496035,1.34435356 2.07721156,2.77417783 C0.36815628,4.31294015 0.30301848,6.96007865 1.92176991,8.57883009 L7.11576991,13.7728301 C7.60366313,14.2607233 8.39553687,14.2607233 8.88343009,13.7728301 L13.9474301,8.70883009 C15.4932907,7.16421022 15.656435,4.66554603 14.2254011,3.07658816 C12.6878615,1.36753003 10.0405611,1.30237876 8.42176991,2.92116991 Z M13.2196425,4.21085221 C13.9790151,5.19382039 13.8422769,6.6934297 12.8869829,7.64795706 L7.999,12.535 L2.98243009,7.51816991 C1.97051462,6.50625444 2.01122073,4.85199654 3.08093391,3.88887126 C4.05588832,3.01089014 5.65072081,3.11478098 6.64776991,4.11183009 L7.46844723,4.93350721 C7.76117945,5.22659599 8.23608735,5.22686516 8.52915162,4.9341084 L9.48215162,3.9821084 C10.4943133,2.96994686 12.1484008,3.0106547 13.11053,4.08011313 L13.2196425,4.21085221 Z"/>
  </g>

)
    case "duotone":
      return (
  <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
    <polygon points="0 16 15.999 16 15.999 0 0 0"/>
    <path fill={color} d="M8.3746,13.2425 L13.4386,8.1785 C14.6836,6.9335 14.8666,4.8865 13.6886,3.5785 C12.4336,2.1835 10.2826,2.1415 8.9726,3.4515 L8.0206,4.4035 L7.1986,3.5815 C5.9546,2.3375 3.9066,2.1545 2.5996,3.3315 C1.2046,4.5875 1.1626,6.7385 2.4726,8.0485 L7.6666,13.2425 C7.8616,13.4375 8.1796,13.4375 8.3746,13.2425" opacity=".2"/>
    <path fill={color} fillRule="nonzero" d="M8.61904661,3.09794661 L8.021,3.696 L7.55215339,3.22794661 C6.09931591,1.77510913 3.75061501,1.62210966 2.26500771,2.95995189 C0.662500355,4.40278288 0.601434503,6.88444128 2.11904661,8.40205339 L7.31304661,13.5960534 C7.70330876,13.9863155 8.33789124,13.9863155 8.72815339,13.5960534 L13.7921534,8.53205339 C15.2460284,7.07817839 15.3989632,4.73046982 14.0601341,3.24389211 C12.6184514,1.64138414 10.1366864,1.58030677 8.61904661,3.09794661 Z M13.3168867,3.91290875 C14.2879321,4.99111544 14.1742855,6.73570768 13.0850466,7.82494661 L8.02015339,12.8889466 L2.82615339,7.69494661 C1.71309859,6.58189181 1.75787665,4.76215381 2.93415594,3.70308084 C4.01123366,2.73313404 5.75683983,2.84684661 6.84504661,3.93505339 L7.66704661,4.75705339 C7.86230876,4.95231554 8.17889124,4.95231554 8.37415339,4.75705339 L9.32615339,3.80505339 C10.4391879,2.69201884 12.2588109,2.73680059 13.3168867,3.91290875 Z"/>
  </g>

)
    case "fill":
      return (
  <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
    <polygon points="0 16 15.999 16 15.999 0 0 0"/>
    <path fill={color} d="M14.0612,3.2444 C13.3642,2.4704 12.4082,2.0284 11.3702,2.0014 C10.3432,1.9684 9.3542,2.3634 8.6192,3.0984 L8.0202,3.6964 L7.5522,3.2284 C6.0922,1.7684 3.7222,1.6494 2.2642,2.9594 C1.4912,3.6574 1.0492,4.6134 1.0222,5.6514 C0.9952,6.6904 1.3842,7.6664 2.1192,8.4014 L7.3132,13.5964 C7.5082,13.7914 7.7642,13.8884 8.0202,13.8884 C8.2772,13.8884 8.5332,13.7914 8.7282,13.5964 L13.7922,8.5314 C15.2512,7.0724 15.3722,4.7004 14.0612,3.2444"/>
  </g>

)
    case "light":
      return (
  <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
    <polygon points="0 16 15.999 16 15.999 0 0 0"/>
    <path fill={color} fillRule="nonzero" d="M8.68693496,3.18633496 L7.999,3.873 L7.44342638,3.3164964 C6.0360064,1.90907632 3.76269234,1.76098771 2.32815578,3.05283892 C0.778922392,4.44770425 0.719892514,6.8466226 2.18693496,8.31366504 L7.38093496,13.507665 C7.72238157,13.8491117 8.27681843,13.8491117 8.61826504,13.507665 L13.682265,8.44366504 C15.0913929,7.03566819 15.2397649,4.76325104 13.9467505,3.32754408 C12.5529963,1.77831119 10.1539991,1.71927078 8.68693496,3.18633496 Z M13.389315,3.82930656 C14.4064247,4.95866106 14.2875972,6.77858412 13.1520414,7.91322853 L8.08793496,12.977335 C8.03938157,13.0258883 7.95981843,13.0258883 7.91126504,12.977335 L2.71726504,7.78333496 C1.55364058,6.6197105 1.60045462,4.71723244 2.83001696,3.61018563 C3.95815633,2.59425599 5.77914934,2.71287943 6.91293496,3.84666504 L7.73377362,4.6685036 C7.88013973,4.81504799 8.11759368,4.81518258 8.26412581,4.6688042 L9.21712581,3.7168042 C10.3808753,2.55305483 12.2832659,2.59987353 13.389315,3.82930656 Z"/>
  </g>

)
    case "thin":
      return (
  <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
    <polygon points="0 16 15.999 16 15.999 0 0 0"/>
    <path fill={color} fillRule="nonzero" d="M8.7753233,3.2747233 L7.999,4.049 L7.35498426,3.40483093 C5.99319689,2.0430435 3.79526967,1.89986575 2.41180385,3.14572594 C0.91584443,4.49262561 0.858850526,6.80880392 2.2753233,8.2252767 L7.4693233,13.4192767 C7.76195438,13.7119078 8.23724562,13.7119078 8.5298767,13.4192767 L13.5938767,8.3552767 C14.9574269,6.99282084 15.1008749,4.79581937 13.853867,3.41119605 C12.5080412,1.91523825 10.1918118,1.85823479 8.7753233,3.2747233 Z M13.4822433,3.74570438 C14.5453148,4.92609272 14.4215631,6.82143147 13.2403943,8.00165235 L8.1763233,13.0657233 C8.07895438,13.1630922 7.92024562,13.1630922 7.8228767,13.0657233 L2.6288767,7.8717233 C1.41468257,6.65752918 1.46353258,4.67231107 2.74637797,3.51729042 C3.925579,2.45537795 5.82195885,2.57891224 7.0013233,3.7582767 L7.82221574,4.58016907 C7.91979315,4.67786533 8.07809578,4.67795505 8.17578387,4.58036947 L9.12878387,3.62836947 C10.3430626,2.41409082 12.328221,2.46294648 13.4822433,3.74570438 Z"/>
  </g>

)
    case "regular":
      return (
  <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
    <polygon points="0 16 16 16 16 0 0 0"/>
    <path fill={color} fillRule="nonzero" d="M8.59808153,3.59801174 L7.999,4.196 L7.53226851,3.72836186 C6.07766881,2.27493015 3.73011925,2.1216525 2.24389211,3.46016594 C0.642108807,4.90337957 0.580702066,7.3838507 2.09781174,8.90211847 L7.29298064,14.0962874 C7.68320876,14.4865155 8.31679124,14.4865155 8.70705339,14.0962534 L13.7710534,9.03225339 C15.2251003,7.57820651 15.3787393,5.23053217 14.0400341,3.74409211 C12.5972311,2.14161589 10.1166831,2.08056848 8.59808153,3.59801174 Z M13.2969192,4.41325594 C14.2676124,5.49107152 14.1534417,7.23565148 13.0639466,8.32514661 L8.00005339,13.3891466 L2.80501936,8.19511258 C1.69231958,7.08156333 1.73735005,5.26259695 2.91318843,4.20316152 C3.99075755,3.23269026 5.735422,3.34660396 6.82508868,4.43539541 L7.64573149,5.25703814 C7.84095874,5.45250318 8.1577072,5.45259958 8.35305339,5.25725339 L9.30505339,4.30525339 C10.4189752,3.19218135 12.2378167,3.23694387 13.2969192,4.41325594 Z"/>
  </g>

)
    default:
      console.error(
        'Unsupported icon weight. Choose from "thin", "light", "regular", "bold", "fill", or "duotone".'
      );
      return null;
  }
};

const Heart = forwardRef<SVGSVGElement, IconProps>(
  (props, ref) => {
    const { color, size, weight, mirrored, ...rest } = props;
    const {
      color: contextColor,
      size: contextSize,
      weight: contextWeight,
      mirrored: contextMirrored,
      ...contextRest
    } = useContext(IconContext);

    return (
      <svg
        ref={ref}
        xmlns="http://www.w3.org/2000/svg"
        width={size ?? contextSize}
        height={size ?? contextSize}
        viewBox="0 0 16 16"
        fill="none"
        stroke={color ?? contextColor}
        transform={mirrored || contextMirrored ? "scale(-1, 1)" : undefined}
        {...contextRest}
        {...rest}
      >
        {renderPathFor(weight ?? contextWeight, color ?? contextColor)}
      </svg>
    );
  }
);

Heart.displayName = "Heart";

export default Heart;

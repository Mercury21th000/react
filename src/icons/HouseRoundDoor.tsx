/* GENERATED FILE */
import React, { forwardRef, useContext } from "react";
import { IconProps, IconContext } from "../lib";

const renderPathFor = (weight: string, color: string): JSX.Element | null => {
  switch (weight) {
    case "bold":
      return (
        <>
          <path
            d="M151.99414,207.99263v-32.0011a23.99995,23.99995,0,0,0-23.99995-24h-.00005a24,24,0,0,0-24,24v32.001a8,8,0,0,1-7.999,8l-47.99414.00632a8,8,0,0,1-8.001-8v-92.4604a8,8,0,0,1,2.61811-5.91906l79.9945-72.73477a8,8,0,0,1,10.76339-.00036l80.0055,72.73509A8,8,0,0,1,216,115.53887V207.999a8,8,0,0,1-8.001,8l-48.00586-.00632A8,8,0,0,1,151.99414,207.99263Z"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="24"
          />
        </>
      );
    case "duotone":
      return (
        <>
          <path
            d="M151.99414,207.99263v-32.0011a23.99995,23.99995,0,0,0-23.99995-24h-.00005a24,24,0,0,0-24,24v32.001a8,8,0,0,1-7.999,8l-47.99414.00632a8,8,0,0,1-8.001-8v-92.4604a8,8,0,0,1,2.61811-5.91906l79.9945-72.73477a8,8,0,0,1,10.76339-.00036l80.0055,72.73509A8,8,0,0,1,216,115.53887V207.999a8,8,0,0,1-8.001,8l-48.00586-.00632A8,8,0,0,1,151.99414,207.99263Z"
            opacity="0.2"
          />
          <path
            d="M151.99414,207.99263v-32.0011a23.99995,23.99995,0,0,0-23.99995-24h-.00005a24,24,0,0,0-24,24v32.001a8,8,0,0,1-7.999,8l-47.99414.00632a8,8,0,0,1-8.001-8v-92.4604a8,8,0,0,1,2.61811-5.91906l79.9945-72.73477a8,8,0,0,1,10.76339-.00036l80.0055,72.73509A8,8,0,0,1,216,115.53887V207.999a8,8,0,0,1-8.001,8l-48.00586-.00632A8,8,0,0,1,151.99414,207.99263Z"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
          />
        </>
      );
    case "fill":
      return (
        <>
          <path d="M218.76367,103.7,138.75781,30.96509a15.9373,15.9373,0,0,0-21.52734.00049L37.2373,103.69946A16.03112,16.03112,0,0,0,32,115.53833v92.46094a15.96786,15.96786,0,0,0,15.99805,15.99951h.0039l39.99414-.00586h.001l.00488-.00024,7.99317-.00122a7.99987,7.99987,0,0,0,7.999-8v-40.0083a23.88966,23.88966,0,0,1,5.7876-15.60376l4.63086-4.16919a23.92318,23.92318,0,0,1,6.45263-3.14624q.54529-.16992,1.10157-.31348c.03247-.00855.06494-.01636.09765-.02466q.50061-.12744,1.00977-.23364c.07886-.01636.1582-.0315.2373-.04712q.44422-.08826.8938-.16016c.11988-.0188.24024-.03589.3606-.053.26391-.03785.52881-.07227.79541-.10132.15234-.0166.30566-.03076.45874-.04444.2395-.02148.47973-.04052.721-.05493.17553-.0105.35156-.01782.52758-.02466.22461-.00854.44971-.01465.67578-.01709.18995-.00195.38013-.00073.57056.00171q.32227.00439.64258.01636.30249.01209.60376.03223.275.01794.54858.042c.26709.02417.53369.05127.79834.08447q.12378.01539.24756.03174c11.69629,1.60107,20.83838,12.07153,20.83838,24.45068v39.34278a7.99988,7.99988,0,0,0,7.999,8l7.99414.00122.00489.00024,40.00488.00586h.00391a15.99912,15.99912,0,0,0,15.999-16v-92.46A16.03571,16.03571,0,0,0,218.76367,103.7Z" />
        </>
      );
    case "light":
      return (
        <>
          <path
            d="M151.99414,207.99263v-32.0011a23.99995,23.99995,0,0,0-23.99995-24h-.00005a24,24,0,0,0-24,24v32.001a8,8,0,0,1-7.999,8l-47.99414.00632a8,8,0,0,1-8.001-8v-92.4604a8,8,0,0,1,2.61811-5.91906l79.9945-72.73477a8,8,0,0,1,10.76339-.00036l80.0055,72.73509A8,8,0,0,1,216,115.53887V207.999a8,8,0,0,1-8.001,8l-48.00586-.00632A8,8,0,0,1,151.99414,207.99263Z"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="12"
          />
        </>
      );
    case "thin":
      return (
        <>
          <path
            d="M151.99414,207.99263v-32.0011a23.99995,23.99995,0,0,0-23.99995-24h-.00005a24,24,0,0,0-24,24v32.001a8,8,0,0,1-7.999,8l-47.99414.00632a8,8,0,0,1-8.001-8v-92.4604a8,8,0,0,1,2.61811-5.91906l79.9945-72.73477a8,8,0,0,1,10.76339-.00036l80.0055,72.73509A8,8,0,0,1,216,115.53887V207.999a8,8,0,0,1-8.001,8l-48.00586-.00632A8,8,0,0,1,151.99414,207.99263Z"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="8"
          />
        </>
      );
    case "regular":
      return (
        <>
          <path
            d="M151.99414,207.99263v-32.0011a23.99995,23.99995,0,0,0-23.99995-24h-.00005a24,24,0,0,0-24,24v32.001a8,8,0,0,1-7.999,8l-47.99414.00632a8,8,0,0,1-8.001-8v-92.4604a8,8,0,0,1,2.61811-5.91906l79.9945-72.73477a8,8,0,0,1,10.76339-.00036l80.0055,72.73509A8,8,0,0,1,216,115.53887V207.999a8,8,0,0,1-8.001,8l-48.00586-.00632A8,8,0,0,1,151.99414,207.99263Z"
            fill="none"
            stroke={color}
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="16"
          />
        </>
      );
    default:
      console.error(
        'Unsupported icon weight. Choose from "thin", "light", "regular", "bold", "fill", or "duotone".'
      );
      return null;
  }
};

const HouseRoundDoor = forwardRef<SVGSVGElement, IconProps>((props, ref) => {
  const { color, size, weight, mirrored, ...rest } = props;
  const {
    color: contextColor,
    size: contextSize,
    weight: contextWeight,
    mirrored: contextMirrored,
    ...contextRest
  } = useContext(IconContext);

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      width={size ?? contextSize}
      height={size ?? contextSize}
      fill={color ?? contextColor}
      viewBox="0 0 256 256"
      transform={mirrored || contextMirrored ? "scale(-1, 1)" : undefined}
      {...contextRest}
      {...rest}
    >
      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}
    </svg>
  );
});

HouseRoundDoor.displayName = "HouseRoundDoor";

export default HouseRoundDoor;

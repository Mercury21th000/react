/* GENERATED FILE */
import React, { forwardRef, useContext } from "react";
import { IconProps, IconContext } from "../lib";

const renderPathFor = (weight: string, color: string): JSX.Element | null => {
  switch (weight) {
    case "bold":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            fillRule="nonzero"
            d="M1.2505,3.5004 C1.2505,2.81007254 1.80939951,2.2504 2.5005,2.2504 L2.5005,2.2504 L5.7925,2.2504 C6.12416132,2.2504 6.44199329,2.38123312 6.67683009,2.61606991 L6.67683009,2.61606991 L8.3107,4.2494 L13.4997,4.2499 C14.1476067,4.2499 14.6793212,4.74179969 14.7432546,5.37209945 L14.7497,5.4999 L14.7497,12.5559 C14.7497,13.2151136 14.2149136,13.7499 13.5557,13.7499 L13.5557,13.7499 L2.4617,13.7499 C1.79389246,13.7499 1.2497,13.2065198 1.2497,12.5389 L1.2497,12.5389 Z M13.249,5.749 L8.0287,5.7484 L8.0005,5.7504 L2.7487,5.7504 L2.749,12.249 L13.249,12.249 L13.249,5.749 Z M5.69,3.75 L2.75,3.75 L2.75,4.25 L6.19,4.25 L5.69,3.75 Z"
          />
        </g>
      );
    case "duotone":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 15.999 16 15.999 0 0 0" />
          <path
            fill={color}
            d="M6.1461,3.1464 L8.0001,5.0004 L2.0001,5.0004 L2.0001,3.5004 C2.0001,3.2244 2.2241,3.0004 2.5001,3.0004 L5.7921,3.0004 C5.9251,3.0004 6.0521,3.0524 6.1461,3.1464"
            opacity=".2"
          />
          <path
            fill={color}
            fillRule="nonzero"
            d="M1.5001,3.5004 C1.5001,2.94825763 1.94795763,2.5004 2.5001,2.5004 L2.5001,2.5004 L5.7921,2.5004 C6.05765368,2.5004 6.31184111,2.60503433 6.49965339,2.79284661 L6.49965339,2.79284661 L8.2063,4.4994 L13.4993,4.4999 C14.0127553,4.4999 14.4348957,4.8858981 14.4925818,5.38326985 L14.4993,5.4999 L14.4993,12.5559 C14.4993,13.0772141 14.0772715,13.4999 13.5553,13.4999 L13.5553,13.4999 L2.4613,13.4999 C1.93148013,13.4999 1.4993,13.0683649 1.4993,12.5389 L1.4993,12.5389 Z M8.0173,5.4994 L8.0001,5.5004 L2.4983,5.5004 L2.499,12.499 L13.499,12.499 L13.4993,5.4999 L8.0173,5.4994 Z M5.79254661,3.49995339 L2.5001,3.5004 L2.5,4.5 L6.793,4.5 L5.79254661,3.49995339 Z"
          />
        </g>
      );
    case "fill":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 15.999 16 15.999 0 0 0" />
          <path
            fill={color}
            d="M2.4997,3.4999 L5.7927,3.4999 L6.7927,4.4999 L2.4997,4.4999 L2.4997,3.4999 Z M13.4997,4.4999 L8.2067,4.4999 L6.4997,2.7929 C6.3117,2.6039 6.0597,2.4999 5.7927,2.4999 L2.4997,2.4999 C1.9477,2.4999 1.4997,2.9489 1.4997,3.4999 L1.4997,4.9999 L1.4997,12.5389 C1.4997,13.0689 1.9317,13.4999 2.4617,13.4999 L13.5557,13.4999 C14.0757,13.4999 14.4997,13.0759 14.4997,12.5559 L14.4997,5.4999 C14.4997,4.9489 14.0517,4.4999 13.4997,4.4999 L13.4997,4.4999 Z"
          />
        </g>
      );
    case "light":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            fillRule="nonzero"
            d="M1.6255,3.5004 C1.6255,3.01706338 2.01662241,2.6254 2.5005,2.6254 L2.5005,2.6254 L5.7925,2.6254 C6.02499985,2.6254 6.24736502,2.71693493 6.41166504,2.88123496 L6.41166504,2.88123496 L8.1547,4.6244 L13.4997,4.6249 C13.9463562,4.6249 14.3139785,4.95862501 14.3678928,5.39012466 L14.3747,5.4999 L14.3747,12.5559 C14.3747,13.0080068 14.0078068,13.3749 13.5557,13.3749 L13.5557,13.3749 L2.4617,13.3749 C2.00087396,13.3749 1.6247,12.9992875 1.6247,12.5389 L1.6247,12.5389 Z M8.0157,5.3744 L8.0005,5.3754 L2.3737,5.3754 L2.3747,12.5389 C2.3747,12.5733422 2.39727704,12.6044961 2.4283359,12.6179204 L2.4617,12.6249 L13.5557,12.6249 C13.5935932,12.6249 13.6247,12.5937932 13.6247,12.5559 L13.6247,12.5559 L13.6247,5.4999 C13.6247,5.43054506 13.5691318,5.3749 13.4997,5.3749 L13.4997,5.3749 L8.0157,5.3744 Z M5.7925,3.3754 L2.5005,3.3754 C2.4310682,3.3754 2.3755,3.43104506 2.3755,3.5004 L2.3755,3.5004 L2.375,4.625 L7.095,4.625 L5.88133496,3.41156504 C5.86585064,3.39608072 5.84671961,3.38516881 5.82555959,3.37961468 L5.82555959,3.37961468 L5.7925,3.3754 Z"
          />
        </g>
      );
    case "thin":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            fillRule="nonzero"
            d="M1.7505,3.5004 C1.7505,3.08606032 2.08569671,2.7504 2.5005,2.7504 L2.5005,2.7504 L5.7925,2.7504 C5.99194603,2.7504 6.18248893,2.82883554 6.3232767,2.9696233 L6.3232767,2.9696233 L8.1027,4.7494 L13.4997,4.7499 C13.8799364,4.7499 14.1932811,5.03194791 14.2428646,5.39810295 L14.2497,5.4999 L14.2497,12.5559 C14.2497,12.9389712 13.9387712,13.2499 13.5557,13.2499 L13.5557,13.2499 L2.4617,13.2499 C2.06986779,13.2499 1.7497,12.9302101 1.7497,12.5389 L1.7497,12.5389 Z M8.0117,5.2494 L8.0005,5.2504 L2.2487,5.2504 L2.2497,12.5389 C2.2497,12.6347336 2.31646606,12.7173723 2.40576821,12.7422565 L2.4617,12.7499 L13.5557,12.7499 C13.6626288,12.7499 13.7497,12.6628288 13.7497,12.5559 L13.7497,12.5559 L13.7497,5.4999 C13.7497,5.36154811 13.6382061,5.2499 13.4997,5.2499 L13.4997,5.2499 L8.0117,5.2494 Z M5.7925,3.2504 L2.5005,3.2504 C2.3619939,3.2504 2.2505,3.36204811 2.2505,3.5004 L2.2505,3.5004 L2.25,4.75 L7.396,4.75 L5.9697233,3.3231767 C5.93856415,3.29201754 5.90006495,3.27005873 5.85794072,3.25888165 L5.85794072,3.25888165 L5.7925,3.2504 Z"
          />
        </g>
      );
    case "regular":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            fillRule="nonzero"
            d="M1.5005,3.5005 C1.5005,2.94735763 1.94735763,2.5005 2.5005,2.5005 L2.5005,2.5005 L5.7925,2.5005 C6.05805368,2.5005 6.31224111,2.60513433 6.50005339,2.79294661 L6.50005339,2.79294661 L8.2067,4.4995 L13.4997,4.5 C14.0131553,4.5 14.4352957,4.8859981 14.4929818,5.38336985 L14.4997,5.5 L14.4997,12.556 C14.4997,13.0771424 14.0768424,13.5 13.5557,13.5 L13.5557,13.5 L2.4617,13.5 C1.93155763,13.5 1.4997,13.0681424 1.4997,12.538 L1.4997,12.538 Z M13.4997,5.5 L8.0117,5.4995 L8.0005,5.5005 L2.4987,5.5005 L2.499,12.5 L13.499,12.5 L13.4997,5.5 Z M5.79294661,3.50005339 L2.5005,3.5005 L2.5,4.5 L6.792,4.5 L5.79294661,3.50005339 Z"
          />
        </g>
      );
    default:
      console.error(
        'Unsupported icon weight. Choose from "thin", "light", "regular", "bold", "fill", or "duotone".'
      );
      return null;
  }
};

const Folder = forwardRef<SVGSVGElement, IconProps>((props, ref) => {
  const { color, size, weight, mirrored, ...rest } = props;
  const {
    color: contextColor,
    size: contextSize,
    weight: contextWeight,
    mirrored: contextMirrored,
    ...contextRest
  } = useContext(IconContext);

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      width={size ?? contextSize}
      height={size ?? contextSize}
      viewBox="0 0 16 16"
      fill="none"
      stroke={color ?? contextColor}
      transform={mirrored || contextMirrored ? "scale(-1, 1)" : undefined}
      {...contextRest}
      {...rest}
    >
      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}
    </svg>
  );
});

Folder.displayName = "Folder";

export default Folder;

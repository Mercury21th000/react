/* GENERATED FILE */
import React, { forwardRef, useContext } from "react";
import { IconProps, IconContext } from "../lib";

const renderPathFor = (weight: string, color: string): JSX.Element | null => {
  switch (weight) {
    case "bold":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            fillRule="nonzero"
            d="M8,1.25 C11.7272136,1.25 14.75,4.27278644 14.75,8 C14.75,11.7272136 11.7272136,14.75 8,14.75 C4.27278644,14.75 1.25,11.7272136 1.25,8 C1.25,4.27278644 4.27278644,1.25 8,1.25 Z M8,2.75 C5.10121356,2.75 2.75,5.10121356 2.75,8 C2.75,10.8987864 5.10121356,13.25 8,13.25 C10.8987864,13.25 13.25,10.8987864 13.25,8 C13.25,5.10121356 10.8987864,2.75 8,2.75 Z M8,3.75 C8.37969577,3.75 8.69349096,4.03215388 8.74315338,4.39822944 L8.75,4.5 L8.75,7.25 L11.5,7.25 C11.8796958,7.25 12.193491,7.53215388 12.2431534,7.89822944 L12.25,8 C12.25,8.37969577 11.9678461,8.69349096 11.6017706,8.74315338 L11.5,8.75 L8,8.75 C7.62030423,8.75 7.30650904,8.46784612 7.25684662,8.10177056 L7.25,8 L7.25,4.5 C7.25,4.08578644 7.58578644,3.75 8,3.75 Z"
          />
        </g>
      );
    case "duotone":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            d="M2,8 C2,4.687 4.687,2 8,2 C11.313,2 14,4.687 14,8 C14,11.313 11.313,14 8,14 C4.687,14 2,11.313 2,8"
            opacity=".2"
          />
          <path
            fill={color}
            fillRule="nonzero"
            d="M8,1.5 C11.5891424,1.5 14.5,4.41085763 14.5,8 C14.5,11.5891424 11.5891424,14.5 8,14.5 C4.41085763,14.5 1.5,11.5891424 1.5,8 C1.5,4.41085763 4.41085763,1.5 8,1.5 Z M8,2.5 C4.96314237,2.5 2.5,4.96314237 2.5,8 C2.5,11.0368576 4.96314237,13.5 8,13.5 C11.0368576,13.5 13.5,11.0368576 13.5,8 C13.5,4.96314237 11.0368576,2.5 8,2.5 Z M8,4 C8.24545989,4 8.44960837,4.17687516 8.49194433,4.41012437 L8.5,4.5 L8.5,7.5 L11.5,7.5 C11.7454599,7.5 11.9496084,7.67687516 11.9919443,7.91012437 L12,8 C12,8.24545989 11.8231248,8.44960837 11.5898756,8.49194433 L11.5,8.5 L8,8.5 C7.75454011,8.5 7.55039163,8.32312484 7.50805567,8.08987563 L7.5,8 L7.5,4.5 C7.5,4.22385763 7.72385763,4 8,4 Z"
          />
        </g>
      );
    case "fill":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            d="M11.5,8.5 L8,8.5 C7.724,8.5 7.5,8.276 7.5,8 L7.5,4.5 C7.5,4.224 7.724,4 8,4 C8.276,4 8.5,4.224 8.5,4.5 L8.5,7.5 L11.5,7.5 C11.776,7.5 12,7.724 12,8 C12,8.276 11.776,8.5 11.5,8.5 M8,1.5 C4.416,1.5 1.5,4.416 1.5,8 C1.5,11.584 4.416,14.5 8,14.5 C11.584,14.5 14.5,11.584 14.5,8 C14.5,4.416 11.584,1.5 8,1.5"
          />
        </g>
      );
    case "light":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            fillRule="nonzero"
            d="M8,1.625 C11.5201068,1.625 14.375,4.47989322 14.375,8 C14.375,11.5201068 11.5201068,14.375 8,14.375 C4.47989322,14.375 1.625,11.5201068 1.625,8 C1.625,4.47989322 4.47989322,1.625 8,1.625 Z M8,2.375 C4.89410678,2.375 2.375,4.89410678 2.375,8 C2.375,11.1058932 4.89410678,13.625 8,13.625 C11.1058932,13.625 13.625,11.1058932 13.625,8 C13.625,4.89410678 11.1058932,2.375 8,2.375 Z M8,4.125 C8.18121843,4.125 8.33241398,4.25354325 8.36738133,4.42442442 L8.375,4.5 L8.375,7.625 L11.5,7.625 C11.6812184,7.625 11.832414,7.75354325 11.8673813,7.92442442 L11.875,8 C11.875,8.18121843 11.7464568,8.33241398 11.5755756,8.36738133 L11.5,8.375 L8,8.375 C7.81878157,8.375 7.66758602,8.24645675 7.63261867,8.07557558 L7.625,8 L7.625,4.5 C7.625,4.29289322 7.79289322,4.125 8,4.125 Z"
          />
        </g>
      );
    case "thin":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            fillRule="nonzero"
            d="M8,1.75 C11.4510712,1.75 14.25,4.54892881 14.25,8 C14.25,11.4510712 11.4510712,14.25 8,14.25 C4.54892881,14.25 1.75,11.4510712 1.75,8 C1.75,4.54892881 4.54892881,1.75 8,1.75 Z M8,2.25 C4.82507119,2.25 2.25,4.82507119 2.25,8 C2.25,11.1749288 4.82507119,13.75 8,13.75 C11.1749288,13.75 13.75,11.1749288 13.75,8 C13.75,4.82507119 11.1749288,2.25 8,2.25 Z M8,4.25 C8.11834673,4.25 8.21748682,4.33223341 8.24339732,4.44267729 L8.25,4.5 L8.25,7.75 L11.5,7.75 C11.6183467,7.75 11.7174868,7.83223341 11.7433973,7.94267729 L11.75,8 C11.75,8.11834673 11.6677666,8.21748682 11.5573227,8.24339732 L11.5,8.25 L8,8.25 C7.88165327,8.25 7.78251318,8.16776659 7.75660268,8.05732271 L7.75,8 L7.75,4.5 C7.75,4.36192881 7.86192881,4.25 8,4.25 Z"
          />
        </g>
      );
    case "regular":
      return (
        <g fill="none" fillRule="evenodd" stroke="none" strokeWidth="1">
          <polygon points="0 16 16 16 16 0 0 0" />
          <path
            fill={color}
            fillRule="nonzero"
            d="M8,1.5 C11.5891424,1.5 14.5,4.41085763 14.5,8 C14.5,11.5891424 11.5891424,14.5 8,14.5 C4.41085763,14.5 1.5,11.5891424 1.5,8 C1.5,4.41085763 4.41085763,1.5 8,1.5 Z M8,2.5 C4.96314237,2.5 2.5,4.96314237 2.5,8 C2.5,11.0368576 4.96314237,13.5 8,13.5 C11.0368576,13.5 13.5,11.0368576 13.5,8 C13.5,4.96314237 11.0368576,2.5 8,2.5 Z M8,4 C8.24545989,4 8.44960837,4.17687516 8.49194433,4.41012437 L8.5,4.5 L8.5,7.5 L11.5,7.5 C11.7454599,7.5 11.9496084,7.67687516 11.9919443,7.91012437 L12,8 C12,8.24545989 11.8231248,8.44960837 11.5898756,8.49194433 L11.5,8.5 L8,8.5 C7.75454011,8.5 7.55039163,8.32312484 7.50805567,8.08987563 L7.5,8 L7.5,4.5 C7.5,4.22385763 7.72385763,4 8,4 Z"
          />
        </g>
      );
    default:
      console.error(
        'Unsupported icon weight. Choose from "thin", "light", "regular", "bold", "fill", or "duotone".'
      );
      return null;
  }
};

const Clock = forwardRef<SVGSVGElement, IconProps>((props, ref) => {
  const { color, size, weight, mirrored, ...rest } = props;
  const {
    color: contextColor,
    size: contextSize,
    weight: contextWeight,
    mirrored: contextMirrored,
    ...contextRest
  } = useContext(IconContext);

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      width={size ?? contextSize}
      height={size ?? contextSize}
      viewBox="0 0 16 16"
      fill="none"
      stroke={color ?? contextColor}
      transform={mirrored || contextMirrored ? "scale(-1, 1)" : undefined}
      {...contextRest}
      {...rest}
    >
      {renderPathFor(weight ?? contextWeight, color ?? contextColor)}
    </svg>
  );
});

Clock.displayName = "Clock";

export default Clock;
